ruleset lab2 {
    meta {
        name "lab2"
        author "Jared"
        logging off
    }
    dispatch {
        // domain "exampley.com"
    }
    global {
		key="vm4sww5a3m4vwjnzbkk7arms"
		
		findMovie = function(title) {
			result =  http:get("http://api.rottentomatoes.com/api/public/v1.0/movies.json",
								{"apikey":key, "q":title, "page_limit": 1});
			body = result.pick("$.content").decode();
			movieArray = body.pick("$.movies");
			movie = movieArray[0];
			movie
		}
	}
   
    rule show_form {
        select when pageview ".*"
        pre {
            form = <<
                <p>A Wild Form Is Approaching</p>
                <form id="form" onsubmit="return false">
                Movie Title: <input type="text" name="movieTitle"><br>
                <input type="submit" value="Submit">
                </form>
            >>;
        } 
        {
       
	replace_inner('#footer', form);
	watch("#form", "submit");
	}
    }
    rule noMovie {
	select when web submit "#form"
	pre {
		title = event:attr("title");
	}
	{
		replace_inner("#main", "<p>Rotten Tomatoes Does Not Have That Movie!!</p>");
	}
    }
    
    rule movieFound {
    	select when web submit "#form"
    	pre {
    		title = event:attr("title");
    		movieInfo = findMovie(title);
    		movieString = movieInfo.as("str")
    	}
    	if title then {
    		replace_inner("#main", "<pMovie Found</p>");
    	
    }
}
}
    		
    		

